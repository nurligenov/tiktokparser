version: "3.8"

services:
  db:
    image: postgres:13
    container_name: tiktokparser_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  pgbouncer:
    image: edoburu/pgbouncer:1.18.0
    env_file:
      - ./.env
    environment:
      DATABASE_URL: "${POSTGRES_DATABASE_URL}"
    depends_on:
      - db

  redis:
    image: redis:alpine
    container_name: tiktokparser_redis
  web:
    build:
      args:
        env: ${ENVIRONMENT}
    container_name: tiktokparser_admin
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
  celery:
    build:
      args:
        env: ${ENVIRONMENT}
    container_name: tiktokparser_celery
    command: celery -A tiktokparser worker --loglevel=INFO --pool=eventlet --concurrency=100
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - web

  celery-beat:
    build:
      args:
        env: ${ENVIRONMENT}
    container_name: tiktokparser_celery_beat
    command: celery -A tiktokparser beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery
      - web

volumes:
  postgres_data:
